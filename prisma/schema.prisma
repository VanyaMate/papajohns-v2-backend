generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_DB_URL")
}

model Food {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  types            FoodType[]
  linkToMarks      FoodToMark[]
  linkToCategories FoodToCategory[]
}

model FoodToMark {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  foodId String @db.ObjectId
  markId String @db.ObjectId

  food Food     @relation(fields: [foodId], references: [id], onDelete: Cascade)
  mark FoodMark @relation(fields: [markId], references: [id], onDelete: Cascade)
}

model FoodToCategory {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  foodId     String @db.ObjectId
  categoryId String @db.ObjectId

  food     Food         @relation(fields: [foodId], references: [id], onDelete: Cascade)
  category FoodCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model FoodMark {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  color String
  icon  String

  linkToFoods FoodToMark[]
}

model FoodCategory {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  color String
  icon  String

  linkToFoods FoodToCategory[]
}

model FoodType {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  title       String
  description String
  person      Float
  price       Float
  foodId      String @db.ObjectId

  food             Food                   @relation(fields: [foodId], references: [id], onDelete: Cascade)
  nutritionals     FoodNutritional[]
  linkToSizes      FoodTypeToSize[]
  linkToAdditional FoodTypeToAdditional[]
}

model FoodTypeToSize {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  typeId String @db.ObjectId
  sizeId String @db.ObjectId

  type FoodType @relation(fields: [typeId], references: [id], onDelete: Cascade)
  size FoodSize @relation(fields: [sizeId], references: [id], onDelete: Cascade)
}

model FoodTypeToAdditional {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  typeId       String @db.ObjectId
  additionalId String @db.ObjectId

  type       FoodType       @relation(fields: [typeId], references: [id], onDelete: Cascade)
  additional FoodAdditional @relation(fields: [additionalId], references: [id], onDelete: Cascade)
}

model FoodSize {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  adminTitle String @default("")
  title      String
  multiplier Float

  linkToFoodTypes FoodTypeToSize[]
}

model FoodAdditional {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  title       String
  description String
  price       Float

  linkToFoodTypes FoodTypeToAdditional[]
}

model FoodNutritional {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  value      Float
  foodTypeId String @db.ObjectId

  foodType FoodType @relation(fields: [foodTypeId], references: [id], onDelete: Cascade)
}
